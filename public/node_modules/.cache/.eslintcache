[{"C:\\Users\\Nagadevi\\task\\src\\index.js":"1","C:\\Users\\Nagadevi\\task\\src\\App.js":"2","C:\\Users\\Nagadevi\\task\\src\\reportWebVitals.js":"3","C:\\Users\\Nagadevi\\task\\src\\Header.js":"4","C:\\Users\\Nagadevi\\task\\src\\meme.js":"5","C:\\Users\\Nagadevi\\task\\src\\MemeData.js":"6"},{"size":535,"mtime":1678162748359,"results":"7","hashOfConfig":"8"},{"size":208,"mtime":1680059351595,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1678162753759,"results":"10","hashOfConfig":"8"},{"size":302,"mtime":1680059388304,"results":"11","hashOfConfig":"8"},{"size":2048,"mtime":1680059374780,"results":"12","hashOfConfig":"8"},{"size":26896,"mtime":1679882977420,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jmx8zx",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nagadevi\\task\\src\\index.js",[],[],"C:\\Users\\Nagadevi\\task\\src\\App.js",[],[],"C:\\Users\\Nagadevi\\task\\src\\reportWebVitals.js",[],[],"C:\\Users\\Nagadevi\\task\\src\\Header.js",[],[],"C:\\Users\\Nagadevi\\task\\src\\meme.js",["33"],[],"import React from \"react\"\r\nimport MemeData from \"./MemeData.js\"\r\nexport default function Meme(){\r\n    const [meme, setMeme] = React.useState({\r\n        topText: \"\",\r\n        bottomText: \"\",\r\n        randomImage: \"http://i.imgflip.com/1bij.jpg\" \r\n    })\r\n    const [allMemes, setAllMemes] = React.useState(MemeData)\r\n\r\n    React.useEffect(() => {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(res => res.json())\r\n            .then(data => setAllMemes(data.data.memes))\r\n    }, [])\r\n    \r\n    function getMemeImage() {\r\n      \r\n        const randomNumber = Math.floor(Math.random() * allMemes.length)\r\n        const url = allMemes[randomNumber].url\r\n        setMeme(prevMeme => ({\r\n            ...prevMeme,\r\n            randomImage: url\r\n        }))\r\n        \r\n    }\r\n    function handleChange(event) {\r\n        const {name, value} = event.target\r\n        setMeme(prevMeme => ({\r\n            ...prevMeme,\r\n            [name]: value\r\n        }))\r\n    }\r\n   \r\n    return(\r\n        <main>\r\n            <div className=\"form\">\r\n                <input type=\"text\"\r\n                    placeholder=\"Top text\"\r\n                    className=\"form-input\"\r\n                    name=\"topText\"\r\n                    value={meme.topText}\r\n                    onChange={handleChange}\r\n                    />\r\n                <input type=\"text\"\r\n                    placeholder=\"Bottom text\"\r\n                    className=\"form-input\"\r\n                    name=\"bottomText\"\r\n                    value={meme.bottomText}\r\n                    onChange={handleChange}\r\n                />\r\n                <button className=\"form--button\"\r\n                    onClick={getMemeImage}\r\n                >Get a new meme image</button>\r\n            </div>\r\n            <div className=\"meme\">\r\n                <img src={meme.randomImage} className=\"meme-image\"/>\r\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\r\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\r\n            </div>\r\n        </main>\r\n    )\r\n}","C:\\Users\\Nagadevi\\task\\src\\MemeData.js",[],[],{"ruleId":"34","severity":1,"message":"35","line":57,"column":17,"nodeType":"36","endLine":57,"endColumn":69},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]